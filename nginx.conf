events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    # Ensure ETag headers are generated so clients can revalidate quickly
    etag on;

    # Gzip compression for text-based / compressible assets
    gzip on;                     # Enable gzip
    gzip_comp_level 6;           # Balance (1=fastest, 9=slowest). 6 is a good trade-off.
    gzip_min_length 1024;        # Only compress responses >= 1KB
    gzip_vary on;                # Add Vary: Accept-Encoding for proxies/CDNs
    gzip_proxied any;            # Allow compression for all proxied requests
    gzip_disable "msie6";        # Disable for very old browsers
    # Types to compress (avoid already-compressed formats like images, woff2)
    gzip_types
        text/plain
        text/css
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        application/vnd.ms-fontobject
        font/ttf
        font/otf
        image/svg+xml;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;

        # SPA / root handler
        location / {
            root   /usr/share/nginx/html;
            index  index.html;
            try_files $uri $uri/ /index.html;
        }

        # HTML should never be aggressively cached so new deployments are seen immediately
        location ~* \.html$ {
            root /usr/share/nginx/html;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
        }

        # Handle static assets (non-hashed filenames) with a short cache + revalidation.
        # We avoid 'immutable' and long max-age because filenames do not contain content hashes.
        # Using a modest max-age allows brief client-side caching while ETag enables fresh checks.
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|ttf|woff|woff2)$ {
            root /usr/share/nginx/html;
            # Provide a single authoritative Cache-Control header (avoid duplicate via 'expires').
            # max-age=300 (5 minutes) balances freshness and some caching; adjust as needed.
            add_header Cache-Control "public, max-age=600, must-revalidate" always;
        }

        # Error pages
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
